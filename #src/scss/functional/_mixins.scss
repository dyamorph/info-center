//* Fonts reg
@mixin font($font_name, $file_name, $weight, $style) {
	@font-face {
		font-family: $font_name;
		font-display: swap;
		src: url("../fonts/#{$file_name}.woff2") format("woff2"), url("../fonts/#{$file_name}.woff") format("woff");
		font-weight: #{$weight};
		font-style: #{$style};
	}
}
//* Adaptiv Value
@mixin adaptiv-value($property, $startSize, $minSize, $type) {
	$addSize: $startSize - $minSize;
	@if $type==1 {
		//! if only less then container
		#{$property}: $startSize + px;
		@media (max-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
		}
	} @else if $type==2 {
		//! if only more then container
		#{$property}: $startSize + px;
		@media (min-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
		}
	} @else {
		//! always
		#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
	}
}
//* Adaptiv value to
@mixin adaptiv-value-to($property, $startSize, $minSize, $minWidth) {
	$addSize: $startSize - $minSize;
	//! #{$property}: $minSize + px;
	@media (min-width: #{$minWidth + px}) {
		#{$property}: calc(#{$minSize + px} + #{$addSize} * (((100vw - #{$minWidth + px})) / ((#{$maxWidth - $minWidth}))));
	}
}

@mixin adaptiv-font($pcSize, $mobSize) {
	$addSize: $pcSize - $mobSize;
	$maxWidth: $maxWidth - 320;
 	font-size: calc(#{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth}));
}

//* Custom scroll-bar
@mixin scrollbars($size, $foreground-color, $background-color: mix($foreground-color, white, 50%)) {
	::-webkit-scrollbar {
		width:  $size;
		height: $size;
	}

	::-webkit-scrollbar-thumb {
		background: $foreground-color;
	}

	::-webkit-scrollbar-track {
		background: $background-color;
	}

	//! For Internet Explorer
	body {
		scrollbar-face-color: $foreground-color;
		scrollbar-track-color: $background-color;
	}
}

//* Anim base
@mixin transform($transform) {
	-webkit-transform: $transform;
		-moz-transform: $transform;
			-ms-transform: $transform;
				-o-transform: $transform;
					transform: $transform;
}

@mixin transition($transition) {
-webkit-transition: #{$transition};
	-moz-transition: #{$transition};
		-o-transition: #{$transition};
			transition: #{$transition};
}

@mixin transition-delay($transition-delay) {
-webkit-transition-delay: #{$transition-delay};
	-moz-transition-delay: #{$transition-delay};
		-o-transition-delay: #{$transition-delay};
			transition-delay: #{$transition-delay};
}


@mixin hover($prop, $val){
	@media (hover: hover) and (pointer: fine) {
		&:hover{
			#{$prop}: $val;
		}
	}
	@media (hover: none) {
		&:active{
			#{$prop}: $val;
		}
	}
}
